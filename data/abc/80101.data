environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\lichunhui2\\AppData\\Roaming', 'CLASSPATH': '.;C:\\Program Files (x86)\\Java\\jdk1.8.0_201\\bin;C:\\Program Files (x86)\\Java\\jdk1.8.0_201\\lib\\dt.jar;C:\\Program Files (x86)\\Java\\jdk1.8.0_201\\lib\\tools.jar', 'COMMONPROGRAMFILES': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'DESKTOP-HP0687A', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'FSHARPINSTALLDIR': 'C:\\Program Files (x86)\\Microsoft SDKs\\F#\\10.1\\Framework\\v4.0\\', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\lichunhui2', 'IDE_PROJECT_ROOTS': 'C:/Users/lichunhui2/PycharmProjects/github', 'IPYTHONENABLE': 'True', 'JAVA_HOME': 'C:\\Program Files (x86)\\Java\\jdk1.8.0_201', 'LIBRARY_ROOTS': 'C:/Python/Python37-32/DLLs;C:/Python/Python37-32/Lib;C:/Python/Python37-32;C:/Python/Python37-32/Lib/site-packages;C:/Python/Python37-32/Lib/site-packages/win32;C:/Python/Python37-32/Lib/site-packages/win32/lib;C:/Python/Python37-32/Lib/site-packages/pythonwin;C:/Users/lichunhui2/.PyCharmCE2018.2/system/python_stubs/671489982;C:/Program Files/JetBrains/PyCharm Community Edition 2018.2.2/helpers/python-skeletons;C:/Program Files/JetBrains/PyCharm Community Edition 2018.2.2/helpers/typeshed/stdlib/3.4;C:/Program Files/JetBrains/PyCharm Community Edition 2018.2.2/helpers/typeshed/stdlib/3;C:/Program Files/JetBrains/PyCharm Community Edition 2018.2.2/helpers/typeshed/stdlib/2and3;C:/Program Files/JetBrains/PyCharm Community Edition 2018.2.2/helpers/typeshed/third_party/3;C:/Program Files/JetBrains/PyCharm Community Edition 2018.2.2/helpers/typeshed/third_party/2and3', 'LNKEVN': 'C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe', 'LOCALAPPDATA': 'C:\\Users\\lichunhui2\\AppData\\Local', 'LOGONSERVER': '\\\\DESKTOP-HP0687A', 'MYSQLCONNECTOR_ASSEMBLIESPATH': 'C:\\Program Files (x86)\\MySQL\\Connector.NET 6.9\\Assemblies\\v4.0', 'NUMBER_OF_PROCESSORS': '4', 'ONEDRIVE': 'C:\\Users\\lichunhui2\\OneDrive', 'OPENSSL_CONF': 'C:\\OpenSSL-Win32\\bin\\openssl.cfg', 'OS': 'Windows_NT', 'PATH': 'C:\\Python\\Python37-32\\lib\\site-packages\\PyQt5\\Qt\\bin;C:\\Program Files (x86)\\Java\\jdk1.8.0_201\\bin;C:\\Program Files (x86)\\Java\\jdk1.8.0_201\\jre\\bin;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\Python35\\Lib\\site-packages\\PyQt5;"C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Java\\jdk1.8.0_201\\jre\\bin;";C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Microsoft\\Web Platform Installer\\;C:\\Program Files (x86)\\Microsoft ASP.NET\\ASP.NET Web Pages\\v1.0\\;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;D:\\BaiduYunDownload\\runtime\\win64;D:\\BaiduYunDownload\\bin;D:\\BaiduYunDownload\\polyspace\\bin;D:\\BaiduYunDownload\\资源\\新建文件夹\\010 Editor;C:\\Pro;ram Files (x86)\\MySQL\\MySQL Fabric 1.5 & MySQL Utilities 1.5\\;C:\\Program Files (x86)\\MySQL\\MySQL Fabric 1.5 & MySQL Utilities 1.5\\Doctrine extensions for PHP\\;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Microsoft SQL Server\\140\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\140\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\140\\DTS\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\140\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\140\\Tools\\Binn\\ManagementStudio\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Python\\Python37-32;C:\\Users\\lichunhui2\\AppData\\Local\\Microsoft\\WindowsApps;;C:\\Python\\Python37-32\\lib\\site-packages\\pywin32_system32', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PROCESSOR_ARCHITECTURE': 'x86', 'PROCESSOR_ARCHITEW6432': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 60 Stepping 3, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '3c03', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files (x86)', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PSMODULEPATH': 'C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\;C:\\Program Files (x86)\\Microsoft SQL Server\\140\\Tools\\PowerShell\\Modules\\', 'PUBLIC': 'C:\\Users\\Public', 'PYCHARM_HOSTED': '1', 'PYDEVD_LOAD_VALUES_ON_DEMAND': 'True', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHONIOENCODING': 'UTF-8', 'PYTHONPATH': 'C:\\Users\\lichunhui2\\PycharmProjects\\github;C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.2\\helpers\\pydev;C:\\Users\\lichunhui2\\.PyCharmCE2018.2\\system\\cythonExtensions;C:/Users/lichunhui2/PycharmProjects/github', 'PYTHONUNBUFFERED': '1', 'QT_QPA_PLATFORM_PLUGIN_PATH': '\\\\DESKTOP-HP0687A\\Users\\李春晖\\AppData\\Local\\Programs\\Python\\Python37-32\\Lib\\site-packages\\PyQt5\\Qt\\plugins', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'TEMP': 'C:\\Users\\LICHUN~1\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\LICHUN~1\\AppData\\Local\\Temp', 'USERDOMAIN': 'DESKTOP-HP0687A', 'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-HP0687A', 'USERNAME': 'lichunhui2', 'USERPROFILE': 'C:\\Users\\lichunhui2', 'VS110COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\', 'WINDIR': 'C:\\WINDOWS'})